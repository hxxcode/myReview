传统的程序和数据库建立连接的原理：
数据库提供接口给jvm，jvm调用jdbc驱动器加载数据库驱动，建立连接（也就是java调用数据库对外的接口和数据库建立连接）。
具体原理：我们的程序运行后，数据库提供的接口信息（类名，句柄）会记录到该程序的进程信息中，根据类名到操作系统中找到具有该类名的线程，
找到线程就等于找到数据库对应的驱动器，然后利用jdbc将驱动器加载到jvm中，然后和数据库建立连接，利用driverManger对象和数据库建立连接生成connection对象。之后在程序中就可以通过该对象调用数据库接口提供的方法。



和数据库进行连接是一种关键的，有限的，昂贵的资源。这点多用户的web程序中很突出（高并发问题一直都在！！！！！）。对数据库连接管理能显著影响程序的伸缩性和健壮性，提高程序性能。

什么是数据库连接池：
数据库连接池负责分配、管理和释放数据库连接，允许程序重复使用一个现有的数据库连接，而不是重新建立一个新的连接（参照线程池）。释放空闲时间大于设置的一个最大空闲时间的数据库连接（保证数据库连接池一般是有可用的连接的）。

连接池方案：
最小连接a:应用启动后随即打开的连接数，以及后续数据库连接池维持的最小的连接数。
最大连接数b：应用可以使用的最大的连接数。

基本原理：
程序初始化时会创建数据库连接池，程序需要和数据库进行交互操作时申请可用连接，使用完毕将连接交还给连接池，程序退出后释放连接池。
应用程序随着启动会最少维护着a个数据库连接，当业务需求量增大时，数据库连接池中的连接不够用，创建新的数据库连接，当然不会超过b。当业务需求继续增加时，需求连接数大于b的话，就会等前面的连接随着事务的提交结束后我们才能复用别人的连接。


几种常见的数据库连接池：
1.dbcp：配置简单，没有监控功能，大并发速度慢
2.cp30：没有连接池监控功能，稳定性还行。
